{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "existingOrNewVM": {
      "type": "string",
      "metadata": {
        "description": "This will determine if will deploy new VM"
      }
    },
    "virtualMachineName": {
      "type": "string",
      "defaultValue": "defaultVM",
      "metadata": {
        "description": "Name of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "admin",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "Desktop 10 Enterprise",
      "allowedValues": [
        "Server 2019 Datacenter",
        "Server 2016 Datacenter",
        "Desktop 10 Enterprise",
        "Desktop 10 Enterprise N",
        "Desktop 10 Pro",
        "Desktop 10",
        "Desktop 7",
        "Desktop 10 Pro N",
        "Server 2012 Datacenter",
        "Server 2012 Datacenter R2",
        "Windows Server 2008 R2 Service Pack 1"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[concat(parameters('virtualMachineName'), '-', take(replace(uniqueString(resourceGroup().id), '-', ''), 10))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "bootDiagnostics": {
      "type": "string",
      "defaultValue": "off",
      "metadata": {
        "description": "Identifier if will enable boot diagnostics on Virtual Machine"
      }
    },
    "storageAccountResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the storage account's resource group"
      }
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "metadata": {
        "description": "Will determine if the storage account is new or existing"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account type"
      }
    },
    "addressPrefixes": {
      "type": "array",
      "defaultValue": ["10.0.0.0/16"],
      "metadata": {
        "description": "Address prefix of the virtual network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet prefix of the virtual network"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "metadata": {
        "description": "Boolean indicating whether the VNet is new or existing"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "resource-group1",
      "metadata": {
        "description": "Resource group of the VNet"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "VirtualNetwork-temp0715",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "PublicIp",
      "metadata": {
        "description": "Name of the public ip address"
      }
    },
    "openitServerURI": {
      "type": "string",
      "defaultValue": "https://openit2019.openitcloud.com:443",
      "metadata": {
        "description": "SERVERURI value to pass as parameter on OpeniT Client installation."
      }
    }
  },
  "variables": {
    "storageAccountId": "[if(equals(parameters('storageAccountNewOrExisting'), 'new'), resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',parameters('storageAccountResourceGroup'), '/providers/','Microsoft.Storage/storageAccounts/', parameters('storageAccountName')))]",
    "vmName": "[if(equals(parameters('existingOrNewVM'), 'new'), parameters('virtualMachineName'), concat(parameters('virtualMachineName'), uniqueString(resourceGroup().id)))]",
    "nicName": "[if(equals(parameters('existingOrNewVM'), 'new'), concat(parameters('virtualMachineName'), '-nic', uniqueString(resourceGroup().id)), concat('temp15', uniqueString(resourceGroup().id)))]",
    "vnetId": {
      "new": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
      "existing": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
    },
    "subnetRef": "[concat(variables('vnetId')[parameters('virtualNetworkNewOrExisting')],'/subnets/',parameters('subnetName'))]",
    "openitInstallation": {
      "script": {
        "filename": "Configure_OpeniTClient.ps1",
        "location": "https://raw.githubusercontent.com/openitdotcom/azure-templates/master/openitclient-windows/scripts/Configure_OpeniTClient.ps1"
      }
    },
    "imageReference": {
      "Server 2019 Datacenter": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2019-Datacenter",
        "version": "latest"
      },
      "Server 2016 Datacenter": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter",
        "version": "latest"
      },
      "Desktop 10 Enterprise": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h2-ent",
        "version": "latest"
      },
      "Desktop 10 Enterprise N": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h2-entn",
        "version": "latest"
      },
      "Desktop 10 Pro": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h2-pro",
        "version": "latest"
      },
      "Desktop 10 Pro N": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h2-pron",
        "version": "latest"
      },
      "Windows Server 2008 R2 Service Pack 1": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2008-R2-SP1",
        "version": "latest"
      },
      "Server 2012 Datacenter R2": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      },
      "Server 2012 Datacenter": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-Datacenter",
        "version": "latest"
      },
      "Desktop 10": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "20h1-pro",
        "version": "latest"
      },
      "Desktop 7": {
        "publisher": "microsoftwindowsdesktop",
        "offer": "windows-7",
        "sku": "win7-enterprise",
        "version": "latest"
      }
    }
  },
  "resources": [
    {
      "condition": "[and(equals(parameters('existingOrNewVM'),'new'), equals(parameters('bootDiagnostics'), 'on'))]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-11-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "condition": "[equals(parameters('existingOrNewVM'),'new')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "condition": "[and(equals(parameters('virtualNetworkNewOrExisting'),'new'), equals(parameters('existingOrNewVM'),'new'))]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["[parameters('addressPrefixes')[0]]"]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('existingOrNewVM'),'new')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('existingOrNewVM'),'new')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')[parameters('windowsOSVersion')]]",
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 128,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "[equals(parameters('bootDiagnostics'), 'on')]",
            "storageUri": "[if(and(equals(parameters('existingOrNewVM'), 'new'), equals(parameters('bootDiagnostics'), 'on')), reference(variables('storageAccountId'), '2018-11-01').primaryEndpoints.blob, '')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('existingOrNewVM'),'new')]",
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),'/', 'Install_OpeniTClient')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
      ],
      "tags": {
        "displayName": "config-openit"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": ["[variables('openitInstallation').script.location]"],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('openitInstallation').script.filename, ' -ServerURI ', parameters('openitServerURI'))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('existingOrNewVM'),'existing')]",
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),'/', 'Install_OpeniTClient_existing')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "config-openit"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": ["[variables('openitInstallation').script.location]"],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('openitInstallation').script.filename, ' -ServerURI ', parameters('openitServerURI'))]"
        }
      }
    },
    {
      "apiVersion": "2018-02-01",
      "name": "pid-fe9d205e-8530-584b-b96a-2f27abe1c682",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    }
  ]
}
